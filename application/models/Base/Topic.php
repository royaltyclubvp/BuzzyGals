<?php

/**
 * Model_Base_Topic
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $description
 * @property integer $active
 * @property Doctrine_Collection $Featuredarticles
 * @property Doctrine_Collection $Followedtopic
 * @property Doctrine_Collection $Resourcetopic
 * 
 * @package    ElleFab
 * @subpackage Data Access Layer
 * @author     Royalty Club - Jarrod Placide-Raymond <royaltyclubvp@royalty-club.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Model_Base_Topic extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('topic');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('description', 'string', 5000, array(
             'type' => 'string',
             'length' => 5000,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('active', 'integer', 1, array(
             'type' => 'integer',
             'length' => 1,
             'fixed' => false,
             'unsigned' => false,
             'default' => 1,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Model_Featuredarticles as Articles', array(
             'local' => 'id',
             'foreign' => 'topic'));

        $this->hasMany('Model_Followedtopic as Followedtopics', array(
             'local' => 'id',
             'foreign' => 'topic'));

        $this->hasMany('Model_Resourcetopic as Resourcetopic', array(
             'local' => 'id',
             'foreign' => 'topic'));
        $this->hasMany('Model_User as Followers', array(
            'local' => 'topic',
            'foreign' => 'user',
            'refClass' => 'Model_Followedtopic'
        ));
    }
}